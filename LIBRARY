class Book:
    def __init__(self, title, author, genre, available=True):
        self.title = title
        self.author = author
        self.genre = genre
        self.available = available

class Library:
    def __init__(self):
        self.books = []

    def add_book(self, book):
        self.books.append(book)

    def remove_book(self, book):
        self.books.remove(book)

    def search_books_by_title(self, title):
        return [book for book in self.books if book.title.lower() == title.lower()]

    def search_books_by_author(self, author):
        return [book for book in self.books if book.author.lower() == author.lower()]

    def search_books_by_genre(self, genre):
        return [book for book in self.books if book.genre.lower() == genre.lower()]

    def display_available_books(self):
        available_books = [book for book in self.books if book.available]
        for book in available_books:
            print(f"Title: {book.title}, Author: {book.author}, Genre: {book.genre}")

# Example Usage
library = Library()

book1 = Book("Harry Potter and the Sorcerer's Stone", "J.K. Rowling", "Fantasy")
book2 = Book("To Kill a Mockingbird", "Harper Lee", "Fiction")
book3 = Book("The Great Gatsby", "F. Scott Fitzgerald", "Classic")

library.add_book(book1)
library.add_book(book2)
library.add_book(book3)

print("Available Books:")
library.display_available_books()

search_title = "Harry Potter and the Sorcerer's Stone"
search_result = library.search_books_by_title(search_title)
if search_result:
    print(f"Books found with title '{search_title}':")
    for book in search_result:
        print(f"Title: {book.title}, Author: {book.author}, Genre: {book.genre}")
else:
    print(f"No books found with title '{search_title}'")

library.remove_book(book2)

print("Updated Available Books:")
library.display_available_books()
